#   ____   __  __ _____ _          _ _    _____             __ _                       _   _------------------
#  / __ \ / _|/ _/ ____| |        | | |     / ____|           / _(_)                     | | (_)--------------
# | |  | | |_| || (___ | |__   ___| | |    | |     ___  _ __ | |_ _  __ _ _   _ _ __ __ _| |_ _  ___  _ __----
# | |  | |  _|  _\___ \| '_ \ / _ \ | |    | |    / _ \| '_ \|  _| |/ _` | | | | '__/ _` | __| |/ _ \| '_ \---
# | |__| | | | | ____) | | | |  __/ | |    | |___| (_) | | | | | | | (_| | |_| | | | (_| | |_| | (_) | | | |--
#  \____/|_| |_||_____/|_| |_|\___|_|_|     \_____\___/|_| |_|_| |_|\__, |\__,_|_|  \__,_|\__|_|\___/|_| |_|--
#                                                                    __/ |
#                                                                   |___/-------------------------------------
# ------------------------------------------------------------------------------------------------------------

import importlib.util
import urllib.request
import os.path
import sys
import random
from os.path import exists, expanduser

home = expanduser("~")


def random_color(min_val=0, max_val=255, seed=None):
    def c(): return random.randint(min_val, max_val)
    if seed is not None:
        random.seed(seed)
    return '#%02X%02X%02X' % (c(), c(), c())

""" ----------------------------------------------------------------------------------------------------------
Prompt_bat configuration
"""

$XONTRIB_PROMPT_BAR_WRAPPERS = {
    'brackets': lambda v: f'[{v}]',
    'color': lambda v: '{BOLD_' + random_color(100,250,v) + '}' + v
}

$XONTRIB_PROMPT_BAR_LEFT = '>> {user#color}{cwd#color}{branch_color}{gitstatus_noc}'
$XONTRIB_PROMPT_BAR_RIGHT = '{hostname#color}{date_time_tz#section}'


""" ----------------------------------------------------------------------------------------------------------
Xontribs: load Xonsh plugins
"""

# Load default xontribs
for main_xontrib in [
    'coreutils',
    'abbrevs'
]:
    xontrib load f"{main_xontrib}"

# Load external xontribs
for extra_xontrib in [
    'readable-traceback',
    'syslog-shell-profiler',
    'prompt_bar',
    'ergopack',
]:
    xontrib load f"{extra_xontrib}"


""" ----------------------------------------------------------------------------------------------------------
Environment Variables
"""

$PATH.append("~/.local/bin/")


""" ----------------------------------------------------------------------------------------------------------
Command capture methods
"""

def predict_false(args):
    """Never say the process is threadable."""
    return False

__xonsh__.commands_cache.threadable_predictors['xxh'] = predict_false


""" ----------------------------------------------------------------------------------------------------------
EXTRA USER CONFIGURATION
"""

